# -*- coding: utf-8 -*-
from mintAPI import *
from liff.ttypes import LiffChatContext, LiffContext, LiffSquareChatContext, LiffNoneContext, LiffViewRequest
import time, json, codecs, re
import random, requests
import datetime

login = """
‡∏û‡∏¥‡∏°‡∏û‡πå /help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î


‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Creator ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏Ñ‡πà‡∏∞


‡πÇ‡∏õ‡∏£‡∏î‡∏õ‡∏¥‡∏î Letter Sealing ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
line://nv/settings/privacy


‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏õ‡∏£‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞
line://nv/connectedDevices"""


APP = '' #‡πÅ‡∏Å‡πâ WIN10 ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
shi = LINE(appName=APP)
#shi.sendMessage("u68974d03060e115360852c149d37f000", f"{shi.profile.displayName} ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô \n\nSelfBotName : üå∏RollChanüå∏\nSelfBotType : ‡∏ö‡∏≠‡∏ó‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ/‡πÄ‡∏Å‡∏°\n"+login)
shi.sendMessage("u56fc52f1c41573793635b3b1bbca2405","‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏ô‡∏µ‡πâ\nline://app/1602687308-GXq4Vvk9")
print("Token : " + shi.authToken)
oepoll = OEPoll(shi)
clm = shi.profile.mid
settingsOpen = codecs.open("71.json","r","utf-8")
settings = json.load(settingsOpen)
now = datetime.datetime.now()
lineMID = shi.getProfile().mid

help1 = """###üë§‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüë§###
- /me ‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡πá‡∏Ñ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
- /myprofile ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
- /status [‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°] ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™
- /name [‡∏ä‡∏∑‡πà‡∏≠] ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠
- /myname ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
- /mystatus ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""

help2 = """###üî¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Çüî¢###
- /number [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] ‡∏£‡∏±‡∏ô‡πÄ‡∏•‡∏Ç
- /plus [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] ‡∏ö‡∏ß‡∏Å‡πÄ‡∏•‡∏Ç
- /minus [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] ‡∏•‡∏ö‡πÄ‡∏•‡∏Ç
- /mul [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] ‡∏Ñ‡∏π‡∏ì‡πÄ‡∏•‡∏Ç
- /div [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] ‡∏´‡∏≤‡∏£‡πÄ‡∏•‡∏Ç
- /power [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô] [‡πÄ‡∏•‡∏Ç‡∏ä‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á] ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á"""

help3 = """##‚úçÔ∏è‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≤‡∏á‡πÜ‚úçÔ∏è##
- /mid ‡∏™‡πà‡∏á mid ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
- /gid ‡∏™‡πà‡∏á‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°
- /getmid ‡∏™‡πà‡∏á mid ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô (‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß)
- /getcontact ‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô (‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß)
- /whois [mid] ‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏à‡∏≤‡∏Å mid
- /gurl ‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡∏Å‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°
- /contactmid ‡∏™‡πà‡∏á mid ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)
- /posturl ‡∏™‡πà‡∏á‡∏•‡∏¥‡πâ‡∏á‡∏Å‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)
- /postid ‡∏™‡πà‡∏á Mid+‡πÑ‡∏≠‡∏î‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå(‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)"""

help4 = """###üé≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏Å‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜüé≤###
- /rps ‡πÄ‡∏Å‡∏°‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö
- /coin ‡πÇ‡∏¢‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç
- /dice ‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤
- /slot ‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô
- /roulette ‡πÄ‡∏Å‡∏°‡∏£‡∏±‡∏™‡πÄ‡∏ã‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πÄ‡∏•‡πá‡∏ï
- /pokcard ‡πÄ‡∏Å‡∏°‡∏õ‡πä‡∏≠‡∏Å‡πÄ‡∏î‡πâ‡∏á
- /hilo ‡πÄ‡∏Å‡∏°‡πÑ‡∏Æ‡πÇ‡∏•"""

help5 = """###üåô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜüåô###
- /ping ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
- /pingV2 (Creator)
- /datetime ‡∏î‡∏π‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
- /gift ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç
- /speed ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
- /goodbye ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°
- /uptime ‡∏î‡∏π‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
- /creator ‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡πá‡∏Ñ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á"""

post = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏
1.‡πÅ‡∏ä‡∏£‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏•‡∏á‡πÅ‡∏ä‡∏ó
2.‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡∏á‡πÅ‡∏ä‡∏ó‡∏ô‡∏±‡πâ‡∏ô"""

card = ["‡∏Ñ‡∏ß‡∏µ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","2 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","1 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","4 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","2 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","‡∏Ñ‡∏ß‡∏µ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","3 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","3 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","‡∏Ñ‡∏¥‡∏á‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","4 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","4 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","‡∏Ñ‡∏¥‡∏á‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","5 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","3 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","5 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","9 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","10 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","1 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","1 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","7 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","2 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","‡πÅ‡∏à‡πá‡∏Ñ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","10 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","10 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","6 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","‡∏Ñ‡∏ß‡∏µ‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","6 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","6 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","5 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","9 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","7 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","‡∏Ñ‡∏ß‡∏µ‡∏ô‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","7 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","‡∏Ñ‡∏¥‡∏á‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","8 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","8 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","9 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","‡∏Ñ‡∏¥‡∏á‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","8 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","3 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","1 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","4 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","8 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","7 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","‡πÅ‡∏à‡πá‡∏Ñ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","‡πÅ‡∏à‡πá‡∏Ñ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","2 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","6 ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏•‡∏≤‡∏°‡∏ï‡∏±‡∏î‚ô¶Ô∏è","9 ‡∏î‡∏≠‡∏Å‡∏à‡∏¥‡∏Å‚ô£Ô∏è","10 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è","5 ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÅ‡∏î‡∏á‚ô•Ô∏è","‡πÅ‡∏à‡πá‡∏Ñ‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏î‡∏≥‚ô†Ô∏è"]

plus = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏

/plus [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°]

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á : /plus 1 1

‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ : 2"""

minus = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏

/minus [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°]

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á : /minus 1 1

‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ : 0"""

mul = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏

/mul [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°]

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á : /mul 2 2

‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ : 4"""

div = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏

/div [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°]

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á : /div 2 2

‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ : 1"""

power = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏

/power [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°]

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á : /div 2 3

‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ : 8"""

cm = """üå∏‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏
1.‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ
2.‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"""



rr = ["'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!","'‡∏õ‡∏±‡∏á!'\n‡∏ó‡∏±‡∏ô‡πÉ‡∏î‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ï‡πá‡∏°‡πÜ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï\nThe End","'‡πÅ‡∏Å‡∏£‡πá‡∏Å..!'\n‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏£‡∏≠‡∏î!"]

creator = 'u68974d03060e115360852c149d37f000'

startTime = time.time()

autoblock = False

def sendflex(to, data):
    n1 = LiffChatContext(msg.to)
    n2 = LiffContext(chat=n1)
    view = LiffViewRequest('1602687308-GXq4Vvk9', n2)
    token = shi.issueLiffView(view)
    url = 'https://api.line.me/message/v3/share'
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer %s' % token.accessToken
    }
    data = {"messages":[data]}
    requests.post(url, headers=headers, data=json.dumps(data))

def timeChange(secs):
    mins, secs = divmod(secs,60)
    hours, mins = divmod(mins,60)
    days, hours = divmod(hours,24)
    weeks, days = divmod(days,7)
    months, weeks = divmod(weeks,4)
    text = ""
    if months != 0: text += "%02d ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô" % (months)
    if weeks != 0: text += " %02d ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå" % (weeks)
    if days != 0: text += " %02d ‡∏ß‡∏±‡∏ô" % (days)
    if hours !=  0: text +=  " %02d ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á" % (hours)
    if mins != 0: text += " %02d ‡∏ô‡∏≤‡∏ó‡∏µ" % (mins)
    if secs != 0: text += " %02d ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ" % (secs)
    if text[0] == " ":
            text = text[1:]
    return text
def status(op):
    global msg
    try:
        if op.type == 5:
          if settings["autoblock"] == True:
              shi.sendMessage(op.param1, "Auto Block!")
              shi.blockContact(op.param1)
          elif settings["autoblock"] == False:
              pass
        if op.type == 25:
            shi.log(f"{shi.profile.displayName} [25] SEND_MESSAGE")
            msg = op.message
            receiver = msg.to
            sender = msg._from
            text = msg.text
            if msg.text is None:
                return
            if msg.text.lower().startswith("/status "):
                    spl = msg.text.replace("/status ","")
                    i = shi.getProfile()
                    i.statusMessage = spl
                    shi.updateProfile(i)
                    shi.sendReplyMessage(msg.id, msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞(ÔΩÄ„Éªœâ„Éª¬¥)")
            elif msg.text.lower().startswith("/name "):
                spl = re.split("/name ",msg.text,flags=re.IGNORECASE)
                if spl[0] == "":
                  prof = shi.getProfile()
                  prof.displayName = spl[1]
                  shi.updateProfile(prof)
                  shi.sendReplyMessage(msg.id, msg.to, "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ( ¬¥„Éªœâ„ÉªÔΩÄ)")
            elif text.lower() == '/myname':
                shi.sendReplyMessage(msg.id, msg.to, 'üå∏‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏ : \n' +shi.profile.displayName)
            elif text.lower() == '/mystatus':
                shi.sendReplyMessage(msg.id, msg.to, 'üå∏‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ôüå∏ : \n' + shi.profile.statusMessage)
            elif text.lower() == '/mypic':
                me = shi.getContact(lineMID)
                me.sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus)
            elif text.lower() == '/mycover':
                cover = shi.getProfileCoverURL(lineMID)
                shi.sendImageWithURL(msg.to, cover)
            elif text.lower() == '/gcreator':
                    group = shi.getGroup(msg.to)
                    GS = group.creator.mid
                    shi.sendContact(msg.to, GS)
            elif text.lower() == "/help":
                contact = shi.getContact(msg._from)
                zem={

  "type": "flex",
  "altText": "üå∏ROLLCHANSENDFLEXüå∏",
  "contents": {
    "type": "carousel",
    "contents": [
      {
        "type": "bubble",
        "hero": {
          "type": "image",
          "url": "https://profile.line-scdn.net/" + contact.pictureStatus,
          "gravity": "center",
          "size": "full",
          "aspectRatio": "1:1",
          "aspectMode": "cover",
          "backgroundColor": "#EE12A1",
        },
        "body": {
          "type": "box",
          "layout": "vertical",
          "contents": [
            {
              "type": "text",
              "text": "üå∏RollChan Commandsüå∏",
              "size": "md",
              "align": "center",
              "weight": "bold",
              "color": "#000000",
            },
            {
              "type": "separator",
              "color": "#000000"
            },
            {

              "type": "text",
              "text": help1,
              "wrap": True,
              "margin": "md",
              "weight": "bold"
            }
          ]
        },
        "footer": {
          "type": "box",
          "layout": "vertical",
          "flex": 0,
          "spacing": "sm",
          "contents": [
            {
              "type": "spacer"
            }
          ]
        }
      },
      {
        "type": "bubble",
        "hero": {
          "type": "image",
          "url": "https://profile.line-scdn.net/" + contact.pictureStatus,
          "gravity": "center",
          "size": "full",
          "aspectRatio": "1:1",
          "aspectMode": "cover",
          "backgroundColor": "#EE12A1",
        },
        "body": {
          "type": "box",
          "layout": "vertical",
          "contents": [
            {
              "type": "text",
              "text": "üå∏RollChan Commandsüå∏",
              "size": "md",
              "align": "center",
              "weight": "bold",
              "color": "#000000",
            },
            {
              "type": "separator",
              "color": "#000000"
            },
            {
              "type": "text",
              "text": help2,
              "wrap": True,
              "margin": "md",
              "weight": "bold"
            }
          ]
        },
        "footer": {
          "type": "box",
          "layout": "vertical",
          "flex": 0,
          "spacing": "sm",
          "contents": [
            {
              "type": "spacer"
            }
          ]
        }
      },
      {
        "type": "bubble",
        "hero": {
          "type": "image",
          "url": "https://profile.line-scdn.net/" + contact.pictureStatus,
          "gravity": "center",
          "size": "full",
          "aspectRatio": "1:1",
          "aspectMode": "cover",
          "backgroundColor": "#EE12A1",
        },
        "body": {
          "type": "box",
          "layout": "vertical",
          "contents": [
            {
              "type": "text",
              "text": "üå∏RollChan Commandsüå∏",
              "size": "md",
              "align": "center",
              "weight": "bold",
              "color": "#000000",
            },
            {
              "type": "separator",
              "color": "#000000"
            },
            {
              "type": "text",
              "text": help3,
              "wrap": True,
              "margin": "md",
              "weight": "bold"
            }
          ]
        },
        "footer": {
          "type": "box",
          "layout": "vertical",
          "flex": 0,
          "spacing": "sm",
          "contents": [
            {
              "type": "spacer"
            }
          ]
        }
      },
      {
        "type": "bubble",
        "hero": {
          "type": "image",
          "url": "https://profile.line-scdn.net/" + contact.pictureStatus,
          "gravity": "center",
          "size": "full",
          "aspectRatio": "1:1",
          "aspectMode": "cover",
          "backgroundColor": "#EE12A1",
        },
        "body": {
          "type": "box",
          "layout": "vertical",
          "contents": [
            {
              "type": "text",
              "text": "üå∏RollChan Commandsüå∏",
              "size": "md",
              "align": "center",
              "weight": "bold",
              "color": "#000000",
            },
            {
              "type": "separator",
              "color": "#000000"
            },
            {
              "type": "text",
              "text": help4,
              "wrap": True,
              "margin": "md",
              "weight": "bold"
            }
          ]
        },
        "footer": {
          "type": "box",
          "layout": "vertical",
          "flex": 0,
          "spacing": "sm",
          "contents": [
            {
              "type": "spacer"
            }
          ]
        }
      },
      {
        "type": "bubble",
        "hero": {
          "type": "image",
          "url": "https://profile.line-scdn.net/" + contact.pictureStatus,
          "gravity": "center",
          "size": "full",
          "aspectRatio": "1:1",
          "aspectMode": "cover",
          "backgroundColor": "#EE12A1",
        },
        "body": {
          "type": "box",
          "layout": "vertical",
          "contents": [
            {
              "type": "text",
              "text": "üå∏RollChan Commandsüå∏",
              "size": "md",
              "align": "center",
              "weight": "bold",
              "color": "#000000",
            },
            {
              "type": "separator",
              "color": "#000000"
            },
            {
              "type": "text",
              "text": help5,
              "wrap": True,
              "margin": "md",
              "weight": "bold"
            }
          ]
        },
        "footer": {
          "type": "box",
          "layout": "vertical",
          "flex": 0,
          "spacing": "sm",
          "contents": [
            {
              "type": "spacer"
            }
          ]
        }
      }
    ]
  }
}
                sendflex(msg.to, zem)
            elif msg.text.lower().startswith("/number "):
                for i in range(int(msg.text.split(" ")[1])):
                    shi.sendMessage(msg.to, str(int(i+1)))
            elif text.lower().startswith("/flex "):
                contact = shi.getContact(msg._from)
                word = msg.text.replace("/flex ","")
                shi.unsendMessage(msg.id)
                flex={
  "type": "flex",
  "altText": "Flex Message",
  "contents": {
    "type": "bubble",
    "direction": "ltr",
    "body": {
      "type": "box",
      "layout": "horizontal",
      "margin": "xs",
      "contents": [
        {
          "type": "text",
          "text": word,
          "wrap": True,
          "flex": 10,
          "margin": "xs",
          "size": "sm",
          "align": "center",
          "gravity": "center",
          "weight": "bold",
          "color": "#EC4848"
        }
      ]
    },
    "styles": {
      "body": {
        "backgroundColor": "#000000",
        "separatorColor": "#382929"
      }
    }
  }
}
                sendflex(msg.to, flex)
            elif text.lower().startswith("/price "):
                ssr = msg.text.replace("/price ","")
                shi.unsendMessage(msg.id)
                doo={
  "type": "flex",
  "altText": "‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
  "contents": {
    "type": "bubble",
    "direction": "ltr",
    "header": {
      "type": "box",
      "layout": "horizontal",
      "contents": [
        {
          "type": "text",
          "text": "‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
          "margin": "xxl",
          "size": "xl",
          "align": "center",
          "weight": "bold",
          "color": "#000000"
        }
      ]
    },
    "hero": {
      "type": "image",
      "url": "https://www.234.in.th/images/2019/08/16/84E26FCC-43DF-4F78-8E4D-C0559310EDD9.jpg",
      "gravity": "center",
      "size": "full",
      "aspectRatio": "4:3",
      "aspectMode": "cover",
      "backgroundColor": "#FFFFFF",
      "action": {
        "type": "uri",
        "label": "Action",
        "uri": "https://linecorp.com/"
      }
    },
    "body": {
      "type": "box",
      "layout": "horizontal",
      "spacing": "md",
      "contents": [
        {
          "type": "box",
          "layout": "vertical",
          "flex": 2,
          "contents": [
            {
              "type": "text",
              "text": "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î "+ ssr +" ‡∏ö‡∏≤‡∏ó",
              "flex": 1,
              "size": "md",
              "gravity": "bottom",
              "weight": "bold",
              "color": "#000000"
            }
          ]
        }
      ]
    },
    "footer": {
      "type": "box",
      "layout": "vertical",
      "contents": [
        {
          "type": "button",
          "action": {
            "type": "uri",
            "label": "PayPal",
            "uri": "https://www.paypal.me/shironene"
          },
          "color": "#133978",
          "style": "primary"
        }
      ]
    },
    "styles": {
      "header": {
        "backgroundColor": "#FFFFFF"
      },
      "footer": {
        "backgroundColor": "#11EEE6"
      }
    }
  }
}
                sendflex(msg.to, doo)
            elif msg.text == "/shop":
                shi.unsendMessage(msg.id)
                ss={
  "type": "flex",
  "altText": "üåôShiroNeko Shopüåô",
  "contents": {
    "type": "bubble",
    "direction": "ltr",
    "header": {
      "type": "box",
      "layout": "vertical",
      "flex": 0,
      "contents": [
        {
          "type": "spacer",
          "size": "md"
        }
      ]
    },
    "hero": {
      "type": "image",
      "url": "https://www.234.in.th/images/2019/08/15/6409F443-48A1-4773-BF9B-CC2AC16B5FEB.jpg",
      "size": "full",
      "aspectRatio": "20:13",
      "aspectMode": "cover",
      "backgroundColor": "#430505",
      "action": {
        "type": "uri",
        "label": "Action",
        "uri": "https://linecorp.com"
      }
    },
    "body": {
      "type": "box",
      "layout": "vertical",
      "spacing": "md",
      "action": {
        "type": "uri",
        "label": "Action",
        "uri": "https://linecorp.com"
      },
      "contents": [
        {
          "type": "text",
          "text": "ShiroNeko Shop",
          "size": "xl",
          "align": "center",
          "weight": "bold"
        },
        {
          "type": "separator",
          "color": "#000000"
        },
        {
          "type": "text",
          "text": "‡∏Ç‡∏≤‡∏¢‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå ‡∏ò‡∏µ‡∏°‡πÑ‡∏•‡∏ô‡πå‡∏à‡πâ‡∏≤",
          "size": "md",
          "align": "center",
          "weight": "bold"
        },
        {
          "type": "text",
          "text": "150 ¬© = 40 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "10 ¬© = 4 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "50 ¬© = 14 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "100 ¬© = 27 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "200 ¬© = 54 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "250 ¬© = 67 ‡∏ø ",
          "align": "center"
        },
        {
          "type": "text",
          "text": "300 ¬© = 81 ‡∏ø",
          "align": "center"
        },
        {
          "type": "text",
          "text": "üåô‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤"
        },
        {
          "type": "text",
          "text": "üåô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÅ‡∏ó‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏ó 100%"
        },
        {
          "type": "text",
          "text": "üåô‡∏Ç‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á‡∏™‡πà‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Å‡∏á"
        },
        {
          "type": "separator",
          "color": "#000000"
        },
        {
          "type": "text",
          "text": "‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ä‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏ü‡πå‡∏ö‡∏≠‡∏ó‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
          "margin": "xl",
          "align": "center",
          "weight": "bold"
        },
        {
          "type": "text",
          "text": "‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á 100‡∏ø / ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
          "align": "center"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏•‡∏Ç"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°"
        },
        {
          "type": "text",
          "text": "üå∏‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"
        },
        {
          "type": "text",
          "text": "‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢"
        },
        {
          "type": "separator",
          "color": "#000000"
        }
      ]
    },
    "footer": {
      "type": "box",
      "layout": "vertical",
      "contents": [
        {
          "type": "spacer"
        },
        {
          "type": "button",
          "action": {
            "type": "uri",
            "label": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°/‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            "uri": "line://ti/p/~nyssk"
          },
          "color": "#02B7FB",
          "style": "primary"
        }
      ]
    }
  }
}
                sendflex(msg.to, ss)
            elif msg.text == "/myprofile":
                contact = shi.getContact(msg._from)
                cover = shi.getProfileCoverURL(msg._from)
                shi.reissueUserTicket()
                res = "Myprofile Info\n"
                res += "Display Name :{}\n".format(contact.displayName)
                res += "Mid: {}\n".format(contact.mid)
                res += "Status Message\n"+"{}\n".format(contact.statusMessage)
                try:
                  poto = "https://os.line.naver.jp/os/p/{}".format(msg._from)
                except:
                  poto = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQcNdUbC8kEeVWqgR9qMX66lQ_hQPM8ScNY30x4nqpYaKY2jt02"
                dax = {
                  "type": "template",
                  "altText": "Myprofile",
                  "template": {
                    "type": "image_carousel",
                    "columns": [
                      {
                        "imageUrl": poto,
                        "layout": "horizontal",
                        "action": {
                          "type": "uri",
                          "label": "PROFILE",
                          "uri": poto,
                          "area": {
                            "x": 447,
                            "y": 356,
                            "width": 1040,
                            "height": 1040
                          }
                        }
                      },
                      {
                        "imageUrl": cover,
                        "layout": "horizontal",
                        "action": {
                          "type": "uri",
                          "label": "COVER",
                          "uri": cover,
                          "area": {
                            "x": 447,
                            "y": 356,
                            "width": 1040,
                            "height": 1040
                          }
                        }
                      },
                      {
                        "imageUrl": "https://qr-official.line.me/L/"+shi.getUserTicket().id+".png",
                        "layout": "horizontal",
                        "action": {
                          "type": "uri",
                          "label": "CONTACT",
                          "uri": "https://line.me/ti/p/"+shi.getUserTicket().id,
                          "area": {
                            "x": 447,
                            "y": 356,
                            "width": 1040,
                            "height": 1040
                          }
                        }
                      }
                    ]
                  }
                }
                sendflex(msg.to, dax)
            elif text.lower() == '/gurl':
                if msg.toType == 2:
                    shi.sendReplyMessage(msg.id, msg.to,"https://line.me/R/ti/g/"+str(shi.reissueGroupTicket(msg.to)))
                else:
                    shi.sendReplyMessage(msg.id, msg.to, "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡πà‡∏∞")
            elif msg.text.lower().startswith("/creator"):
               try:
                   data={
  "type": "flex",
  "altText": "Flex Message",
  "contents": {
    "type": "bubble",
    "direction": "ltr",
    "footer": {
      "type": "box",
      "layout": "vertical",
      "contents": [
        {
          "type": "spacer"
        },
        {
          "type": "button",
          "action": {
            "type": "uri",
            "label": "Contact Shiro",
            "uri": "line://ti/p/~nyssk"
          },
          "color": "#FD0077",
          "style": "primary"
        }
      ]
    }
  }
}
                   shi.sendContact(msg.to, creator)
                   shi.sendMessage(msg.to,"‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡πà‡∏∞(*¬¥œâÔΩÄ*)")
                   sendflex(msg.to, data)
               except Exception as e:
                   pass
            elif msg.text.lower().startswith("/pingv2"):
                shi.sendReplyMessage(msg.id, msg.to, "Creator Only!")
            elif text.lower() == '/gid':
                    gid = shi.getGroup(msg.to)
                    shi.sendReplyMessage(msg.id, msg.to,gid.id)
            elif msg.text.lower().startswith("/whois "):
                men = msg.text.split(" ")
                get = msg.text.replace(men[0] + " ","")
                shi.sendContact(msg.to,str(get))
            elif text.lower() == "/mid":
                shi.sendReplyMessage(msg.id, msg.to, shi.profile.mid) 
            elif msg.text.lower().startswith("/ping"):
                shi.sendReplyMessage(msg.id, msg.to,"Pong!")
            elif msg.text.lower().startswith("/me"):
                shi.sendReplyMessage(msg.id,receiver, None, contentMetadata={'mid': sender}, contentType=13)
            elif text.lower() == '/datetime':
                now2 = datetime.datetime.now()
                nowY = datetime.datetime.strftime(now2,"%Y")
                nowB = datetime.datetime.strftime(now2,"%B")
                nowA = datetime.datetime.strftime(now2,"%A")
                nowD = datetime.datetime.strftime(now2,"%d")
                nowT = datetime.datetime.strftime(now2,"%H")
                nowM = datetime.datetime.strftime(now2,"%M")
                nowS = datetime.datetime.strftime(now2,"%S")
                nowC = datetime.datetime.strftime(now2,"%c")
                nowZ = datetime.datetime.strftime(now2,"%z")
                tm = "üå∏‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ôüå∏:\n\n"+"‡∏ß‡∏±‡∏ô : "+nowA+"\n"+"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà : "+nowD+"\n"+"‡πÄ‡∏î‡∏∑‡∏≠‡∏ô : "+nowB+"\n"+"‡∏õ‡∏µ : "+nowY+"\n"+"‡πÄ‡∏ß‡∏•‡∏≤ : "+nowT+":"+nowM+":"+nowS+"\n"+"‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ : "+"(GMT+7) Bangkok"+"\n\n"+nowC
                shi.sendReplyMessage(msg.id, msg.to, tm)
            elif text.lower() == "/goodbye":
                shi.leaveGroup(msg.to)
            elif text.lower() == "/gift":
                shi.sendGift(msg.to,'jejejeeiiw9w99','sticker')
            elif msg.text.lower() == "/speed":
                start = time.time()
                shi.sendMessage(msg.to, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ñ‡πà‡∏∞")
                totalTime = time.time() - start
                shi.sendMessage(msg.to,format(str(totalTime)) + "‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
            elif text.lower() == '/getmid':
                shi.sendReplyMessage(msg.id, msg.to,msg.to)
            elif text.lower() == '/getcontact':
                shi.sendContact(msg.to,msg.to)
            elif text.lower() == '/posturl':
                try:
                    shi.sendReplyMessage(msg.id, msg.to, shi.talk.getRecentMessagesV2(msg.to, 2)[1].contentMetadata["postEndUrl"])
                except:
                    shi.sendReplyMessage(msg.id, msg.to, post)
            elif text.lower() == '/postid':
                try:
                    shi.sendReplyMessage(msg.id, msg.to, shi.talk.getRecentMessagesV2(msg.to, 2)[1].contentMetadata["postEndUrl"].split("userMid=")[1])
                except:
                    shi.sendReplyMessage(msg.id, msg.to, post)
            elif text.lower() == '/uptime':
                timenow = time.time()
                runtime = timenow - startTime
                runtime = timeChange(runtime)
                shi.sendReplyMessage(msg.id, msg.to, "‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏•‡∏à‡∏±‡∏á\n" + str(runtime))
            elif text.lower() == '/rps':
                s = random.choice(["‡∏Ñ‡πâ‡∏≠‡∏ô","‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©","‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£","‡∏Ñ‡πâ‡∏≠‡∏ô","‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©","‡∏Å‡∏£‡∏£‡πÑ‡∏Å‡∏£"])
                shi.sendReplyMessage(msg.id, msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πà‡∏≤‡∏¢‡∏¥‡πâ‡∏á‡∏â‡∏∏‡∏ö : "+ s)
            elif text.lower() == '/coin':
                n = random.choice(["‡∏´‡∏±‡∏ß","‡∏Å‡πâ‡∏≠‡∏¢","‡∏´‡∏±‡∏ß","‡∏Å‡πâ‡∏≠‡∏¢"])
                shi.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏¢‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç. . .")
                shi.sendMessage(msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏¢‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç : "+ n)
            elif text.lower() == '/slot':
                s = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                t = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                r = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                v = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                a = random.choice('üçáüçáüçãüçëüçí‚ë¶üçáüçãüçëüçíüçãüçëüçíüçëüçíüçí‚ë¶üçãüçëüçí')
                shi.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô. . .")
                shi.sendMessage(msg.to,"‡∏ú‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô :\n"+" | "+s+" | "+t+" | "+r+" | "+v+" | "+a+" | ")
            elif text.lower() == '/roulette':
                s = random.choice(rr)
                shi.sendReplyMessage(msg.id, msg.to, "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏±‡πà‡∏ô‡πÑ‡∏Å‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏õ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡πÇ‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏é‡∏ß‡πà‡∏≤...")
                shi.sendMessage(msg.to, s)
            elif text.lower() == '/dice':
                f = random.choice('123456')
                shi.sendReplyMessage(msg.id, msg.to,"‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏≠‡∏¢‡∏π‡πà. . .")
                shi.sendMessage(msg.to,"‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ : "+f+" ‡πÅ‡∏ï‡πâ‡∏°")
            elif text.lower() == '/hilo':
                f = random.choice('123456')
                r = random.choice('123456')
                t = random.choice('123456')
                d = int(f) + int(r) + int(t)
                shi.sendReplyMessage(msg.id, msg.to, "‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤‡∏ó‡∏±‡πâ‡∏á3‡∏•‡∏π‡∏Å. . .")
                shi.sendMessage(msg.to, "üé≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏îüé≤\n\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 1 : "+f+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 2 : "+r+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n"+"‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà 3 : "+t+" ‡πÅ‡∏ï‡πâ‡∏°"+"\n\n"+"‡πÅ‡∏ï‡πâ‡∏°‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î "+str(d)+" ‡πÅ‡∏ï‡πâ‡∏°")
            elif text.lower() == '/pokcard':
                shi.sendMessage(msg.to, "‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏ö :\n\n"+random.choice(card)+"\n"+random.choice(card)+"\n\n‡∏û‡∏¥‡∏°‡∏û‡πå /draw ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡πà‡∏ß‡πÑ‡∏û‡πà")
            elif text.lower() == '/draw':
                shi.sendMessage(msg.to,"‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡πà‡∏ß : \n\n"+random.choice(card))
            elif text.lower() == '/contactmid':
                try:
                    shi.sendReplyMessage(msg.id, msg.to, shi.talk.getRecentMessagesV2(msg.to, 2)[1].contentMetadata["mid"])
                except:
                    shi.sendMessage(msg.to, cm)
            elif text.lower() == '/picall':
                if msg.toType == 2:
                    gs = shi.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                       targets.append(g.mid)
                    if targets == []:
                      shi.sendReplyMessage(msg.id, msg.to,"‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡πà‡∏∞^_^")
                    else:
                        for target in targets:
                            try:
                                profile = shi.getContact(target)
                                shi.sendImageWithURL(msg.to,"http://dl.profile.line.naver.jp/"+profile.pictureStatus)
                            except:
                                pass
            elif msg.text.lower() == '/autoblock on':
                    if settings["autoblock"] == True:
                        if settings["lang"] == "JP":
                            shi.sendReplyMessage(msg.id, msg.to, "‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")
                    else:
                        settings["autoblock"] = True
                        if settings["lang"] == "JP":
                            shi.sendReplyMessage(msg.id, msg.to, "‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")
            elif msg.text.lower() == '/autoblock off':
                    if settings["autoblock"] == False:
                        if settings["lang"] == "JP":
                            shi.sendReplyMessage(msg.id, msg.to, "‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")
                    else:
                        settings["autoblock"] = False
                        if settings["lang"] == "JP":
                            shi.sendReplyMessage(msg.id, msg.to, "‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞")
            elif msg.text.lower().startswith("/power "):
                 try:
                     m = msg.text.split(" ")[1]
                     i = msg.text.split(" ")[2]
                     g = int(m) ** int(i)
                     shi.sendMessage(msg.to, str(g))
                 except:
                        shi.sendReplyMessage(msg.id, msg.to, power)
            elif msg.text.lower().startswith("/plus "):
                 try:
                     a = msg.text.split(" ")[1]
                     b = msg.text.split(" ")[2]
                     c = int(a) + int(b)
                     shi.sendMessage(msg.to, str(c))
                 except:
                        shi.sendReplyMessage(msg.id, msg.to, plus)
            elif msg.text.lower().startswith("/minus "):
                 try:
                     d = msg.text.split(" ")[1]
                     e = msg.text.split(" ")[2]
                     f = int(d) - int(e)
                     shi.sendMessage(msg.to, str(f))
                 except:
                        shi.sendReplyMessage(msg.id, msg.to, minus)
            elif msg.text.lower().startswith("/mul "):
                 try:
                     x = msg.text.split(" ")[1]
                     y = msg.text.split(" ")[2]
                     z = int(x) * int(y)
                     shi.sendMessage(msg.to, str(z))
                 except:
                        shi.sendReplyMessage(msg.id, msg.to, mul)
            elif msg.text.lower().startswith("/div "):
                 try:
                     q = msg.text.split(" ")[1]
                     p = msg.text.split(" ")[2]
                     m = int(q) / int(p)
                     shi.sendMessage(msg.to, str(m))
                 except:
                        shi.sendReplyMessage(msg.id, msg.to, div)
        if op.type == 26 and op.message._from == creator and op.message.toType == 2 and "/pingV2" in op.message.text:
            msg = op.message
            if msg.text is None:
               return
            try:
                shi.sendReplyMessage(msg.id, msg.to, "Pong! ( ¬¥„Éªœâ„ÉªÔΩÄ)")
            except Exception as e:
                pass
    except Exception as e:
         print(e)

while True:
    try:
        ops = oepoll.singleTrace(count=50)
        if ops is not None:
            for op in ops:
                status(op)
                oepoll.setRevision(op.revision)
    except Exception as e:
        print(e)
